#!/bin/bash

# CUSTOM VARIABLES
HELM_CP_PORTAL_NAMESPACE=cp-portal
HELM_CP_PORTAL_RESOURCE_NAME=cp-portal-resource
HELM_SIDECAR_NAMESPACE=sidecar
HELM_SIDECAR_NAME=sidecar
TARGET_CLUSTER=host-cluster #check cp-portal-deployment/script/cp-portal-vars.sh HOST_CLUSTER_NAME


# SCRIPT START

## VARIABLES SETTING
### SIDECAR VARIABLES
SIDECAR_API_URL=$(helm get values $HELM_SIDECAR_NAME -n $HELM_SIDECAR_NAMESPACE | yq e '.api.apiServer.url')
SIDECAR_TOKEN_KIND=bearer
SIDECAR_ROOTNAMESPACE=$(helm get values $HELM_SIDECAR_NAME -n $HELM_SIDECAR_NAMESPACE | yq e '.rootNamespace')
SIDECAR_ROLEADMIN=korifi-controllers-admin
SIDECAR_ROLEUSER=korifi-controllers-root-namespace-user
SIDECAR_PORTAL_API_URL=http://portal-api.$(helm get values $HELM_SIDECAR_NAME -n $HELM_SIDECAR_NAMESPACE | yq e '.defaultAppDomainName')

### CP-PORTAL VARIABLES
CP_PORTAL_API_URI=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.cp.portal.api.url')
CP_PORTAL_COMMON_API_URI=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.cp.portal.commonapi.url')
CP_PORTAL_METRIC_COLLECTOR_API_URI=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.cp.portal.metriccollectorapi.url')
CP_PORTAL_PROVIDER_TYPE=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.cp.portal.provider.type')
CP_PORTAL_TERRAMAN_API_URI=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.cp.portal.terramanapi.url')
CP_PORTAL_UI_URI=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.cp.portal.ui.url')
DATABASE_TERRAMAN_ID=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.database.terraman.id')
DATABASE_TERRAMAN_PASSWORD=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.database.terraman.password')
DATABASE_URL=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.database.url')
DATABASE_USER_ID=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.database.user.id')
DATABASE_USER_PASSWORD=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.database.user.password')
K8S_MASTER_HOST_KEY=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.k8s.master.private.key.name')
K8S_MASTER_NODE_IP=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.k8s.master.node.ip')
KEYCLOAK_ADMIN_PASSWORD=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.keycloak.admin.password')
KEYCLOAK_ADMIN_USERNAME=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.keycloak.admin.username')
KEYCLOAK_CP_CLIENT_ID=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.keycloak.client.id')
KEYCLOAK_CP_CLIENT_SECRET=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.keycloak.client.secret')
KEYCLOAK_CP_REALM=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.keycloak.realm')
KEYCLOAK_DB_SCHEMA=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.keycloak.schema')
KEYCLOAK_URI=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.keycloak.url')
REPOSITORY_URL=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.repository.url')
VAULT_ROLE_ID=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.vault.role.id')
VAULT_ROLE_NAME=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.vault.role.name')
VAULT_SECRET_ID=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.vault.secret.id')
VAULT_URL=$(helm get values $HELM_CP_PORTAL_RESOURCE_NAME -n $HELM_CP_PORTAL_NAMESPACE | yq e '.vault.url')


echo "SIDECAR_API_URL: $SIDECAR_API_URL"
echo "SIDECAR_TOKEN_KIND: $SIDECAR_TOKEN_KIND"
echo "SIDECAR_ROOTNAMESPACE: $SIDECAR_ROOTNAMESPACE"
echo "SIDECAR_ROLEADMIN: $SIDECAR_ROLEADMIN"
echo "SIDECAR_ROLEUSER: $SIDECAR_ROLEUSER"
echo "SIDECAR_PORTAL_API_URL: $SIDECAR_PORTAL_API_URL"
echo "CP_PORTAL_API_URI: $CP_PORTAL_API_URI"
echo "CP_PORTAL_COMMON_API_URI: $CP_PORTAL_COMMON_API_URI"
echo "CP_PORTAL_METRIC_COLLECTOR_API_URI: $CP_PORTAL_METRIC_COLLECTOR_API_URI"
echo "CP_PORTAL_PROVIDER_TYPE: $CP_PORTAL_PROVIDER_TYPE"
echo "CP_PORTAL_TERRAMAN_API_URI: $CP_PORTAL_TERRAMAN_API_URI"
echo "CP_PORTAL_UI_URI: $CP_PORTAL_UI_URI"
echo "DATABASE_TERRAMAN_ID: $DATABASE_TERRAMAN_ID"
echo "DATABASE_TERRAMAN_PASSWORD: $DATABASE_TERRAMAN_PASSWORD"
echo "DATABASE_URL: $DATABASE_URL"
echo "DATABASE_USER_ID: $DATABASE_USER_ID"
echo "DATABASE_USER_PASSWORD: $DATABASE_USER_PASSWORD"
echo "K8S_MASTER_HOST_KEY: $K8S_MASTER_HOST_KEY"
echo "K8S_MASTER_NODE_IP: $K8S_MASTER_NODE_IP"
echo "KEYCLOAK_ADMIN_PASSWORD: $KEYCLOAK_ADMIN_PASSWORD"
echo "KEYCLOAK_ADMIN_USERNAME: $KEYCLOAK_ADMIN_USERNAME"
echo "KEYCLOAK_CP_CLIENT_ID: $KEYCLOAK_CP_CLIENT_ID"
echo "KEYCLOAK_CP_CLIENT_SECRET: $KEYCLOAK_CP_CLIENT_SECRET"
echo "KEYCLOAK_CP_REALM: $KEYCLOAK_CP_REALM"
echo "KEYCLOAK_DB_SCHEMA: $KEYCLOAK_DB_SCHEMA"
echo "KEYCLOAK_URI: $KEYCLOAK_URI"
echo "REPOSITORY_URL: $REPOSITORY_URL"
echo "VAULT_ROLE_ID: $VAULT_ROLE_ID"
echo "VAULT_ROLE_NAME: $VAULT_ROLE_NAME"
echo "VAULT_SECRET_ID: $VAULT_SECRET_ID"
echo "VAULT_URL: $VAULT_URL"
echo "TARGET_CLUSTER: $TARGET_CLUSTER"

if [ -e ./portal-variables.yml ]; then
    while true; do
        read -p "Do you want rewrite portal-variables.yml file? " yn
        case $yn in
            [Yy]* ) break;;
            [Nn]* ) exit;;
            * ) echo "Please answer y or n.";;
        esac
    done
fi

cat <<EOF > portal-variables.yml
SIDECAR_API_URL: $SIDECAR_API_URL
SIDECAR_TOKEN_KIND: $SIDECAR_TOKEN_KIND
SIDECAR_ROOTNAMESPACE: $SIDECAR_ROOTNAMESPACE
SIDECAR_ROLEADMIN: $SIDECAR_ROLEADMIN
SIDECAR_ROLEUSER: $SIDECAR_ROLEUSER
SIDECAR_PORTAL_API_URL: $SIDECAR_PORTAL_API_URL
CP_PORTAL_API_URI: $CP_PORTAL_API_URI
CP_PORTAL_COMMON_API_URI: $CP_PORTAL_COMMON_API_URI
CP_PORTAL_METRIC_COLLECTOR_API_URI: $CP_PORTAL_METRIC_COLLECTOR_API_URI
CP_PORTAL_PROVIDER_TYPE: $CP_PORTAL_PROVIDER_TYPE
CP_PORTAL_TERRAMAN_API_URI: $CP_PORTAL_TERRAMAN_API_URI
CP_PORTAL_UI_URI: $CP_PORTAL_UI_URI
DATABASE_TERRAMAN_ID: $DATABASE_TERRAMAN_ID
DATABASE_TERRAMAN_PASSWORD: $DATABASE_TERRAMAN_PASSWORD
DATABASE_URL: $DATABASE_URL
DATABASE_USER_ID: $DATABASE_USER_ID
DATABASE_USER_PASSWORD: $DATABASE_USER_PASSWORD
K8S_MASTER_HOST_KEY: $K8S_MASTER_HOST_KEY
K8S_MASTER_NODE_IP: $K8S_MASTER_NODE_IP
KEYCLOAK_ADMIN_PASSWORD: $KEYCLOAK_ADMIN_PASSWORD
KEYCLOAK_ADMIN_USERNAME: $KEYCLOAK_ADMIN_USERNAME
KEYCLOAK_CP_CLIENT_ID: $KEYCLOAK_CP_CLIENT_ID
KEYCLOAK_CP_CLIENT_SECRET: $KEYCLOAK_CP_CLIENT_SECRET
KEYCLOAK_CP_REALM: $KEYCLOAK_CP_REALM
KEYCLOAK_DB_SCHEMA: $KEYCLOAK_DB_SCHEMA
KEYCLOAK_URI: $KEYCLOAK_URI
REPOSITORY_URL: $REPOSITORY_URL
VAULT_ROLE_ID: $VAULT_ROLE_ID
VAULT_ROLE_NAME: $VAULT_ROLE_NAME
VAULT_SECRET_ID: $VAULT_SECRET_ID
VAULT_URL: $VAULT_URL
TARGET_CLUSTER: $TARGET_CLUSTER
EOF


# git submodule
git submodule init
git submodule update


# cf push
#cd sidecar-portal-api
#cf push --vars-file ../portal-variables.yml

#cd ../sidecar-portal-ui
#cf push --vars-file ../portal-variables.yml

#cd ..


